s = "AGATTAGCGGCGTGGACGATCATAGATCATTAATTGGGTGGAGGTTACACCGTTGCGCGTCAGGTGTTAGTTTCTATATGTTCTCCGGTAAGGCCTAAAGGCTACCGGGAACGCCTCCCTGTTATTCGGGAGTAAGACAATTGTGATAATGAGCGATATACTAAACCAATAACCGTGCTAGCGACGGCGCGGCCAAGACGCCAAGGTCAGAGTTTGGAGGCTAGGCCGTGTGTAACATCGCATGATTCAGTGCGGGTAGGGTGTAAACCATAACTATACAGCGGTCAGAAAGGCACAACTATACTGACTAACGCTGGATTAATGTGGCGTGTCCCAATGCAAAGGGTAGGCAGTGATTTTCGACGGTGACTAGCCCAGAGAAAGTCACGTGGGCACTATCTGACTCTTGATAAACAGGAGGCCCTCAGCGCACGCGCGTGTAATGTGCCTCTACAGTCGCTCTCCACTCTTCATCCCGGACTATCTCCACAGTATAACGTTTAAAATTTTCTTTCATTTAACTGCCCTATACGGAAAAATGTCCACCGGTTTTGTTGAGATAGTGGTAAGACTGACGCTTGGTCCGGTCGTGCAGCGCGCACGCGACAGATGGCGCGTTGGCGCTTTGGCAACATAAAATAATACGTCGGATCAATTCCAACGTCCCACCCGTAGCTCGTCATCCCTGCTCCTCCCCAAAGAGAGGACGTGTAATTGAGGACGAATGGTTGTGCATCTCGGTATTCTTAGGCGAGTACCGACATGCAAGTTCCCGTTAACAACGTAAAGAGCATTGAAGGGGAGGAGACTAATCGTATTGTTTTATGATGGCAGCTCCAATGTAAATTGTGGCTATAAGTCAAAAGGAAATTAGTCTCATACTACCCAACTATCATGAGCCGCGCAATTGCTGCGGCGATCCAAGTTTAAATTTGGGCTCTTTGTGAGAATGGCGACTTTCGTGGTTCCTGACGAAGTTTTTACCCTGGTGTCTA"
t = "ACATAAGTGGAGTCAAAGTTGATAGCCGATTGCGTTGGCCTAGTCATCTGCCGTATGTGACTCACCCGTTAATCCAAATCTCGTCCAGATGCGCATAGAAAGTAACACGCAGGGAGCCATCGTTATTACGACTAAGACCGTTGATATCTAGACCGAACTACTATTACAAAGGGCCAGCCAGCGACCCTGAGTCTGAGACAGCTAGGTCTATGGCAAGGTGCCATCCTGTAAATAAAATCGCATTTCACACCACTGAGCTGGAGCAACACGAAACAGCAATAAATTAAGGATACGATAAGCAAACTTACTAACATAGACATAGGTTTGCGTTGTCCAATCCCGACGGGCGTGTGCGCATAAACACGAACGAGAGGGATGCGAAAATCATGTGGCAACTATCTCAGACTTGATACCCCTTACGGCCTCCATGCACGCGTGGCTTGTGTGCGTTTGATTCATCGCCCGACTAGACAAAGTAGGCTACATCCTCCCTATGTCGTTAAAAATTTCAGACTTCTACTCGACCGTAGAAGGTCGCGTGTGCTTCGGCGTGGACCATAATGAACCTGGCCCCGCATTCTATTCGGACTTGAAGGGGCTAGGGCACTGCTAACGGCGACGGTAGCACTCGGCTGAGATGAAAGCGTGGAATCAATACCCTGGACTCACCCGTTGCAGTACTTACAGGTCCCGCCCTACCTCGAGAGTGTAAAATCGACCCGGCACCATGGCATGTCTCGTTACCCGAAAGCTAGACCCGGTCTACCATGTAATGTAAATGCGGAAAAGACGCCGGAGGCAGGGCAGTCAAATTGAGACCTCTTGCTTTAGCAACTCCACAAGTATCCGAGTCTAAAAAGAGAGCGCTACTTAGTAACATAGTACCAGACCAGAATTACACGCGCCCTCGCTACTGGTATCAGGCATTCAGTGCGGGCTCGTTCGGCGATCAACTCAGTAAGCAATGGTTAACAGACCTTTATATATACTGTCGA"

def hamming_distance(s,t):
    if len(s) != len(t):
        print("Strings are not equal size")
    else:
        h_d = 0
        for position in range(len(s)):
            if s[position] != t[position]:
                h_d += 1
        return h_d
    
print(hamming_distance(s,t))